-- Drop in dependency order
DROP TABLE IF EXISTS loan;
DROP TABLE IF EXISTS book;
DROP TABLE IF EXISTS member;

-- member
CREATE TABLE member (
                        id               INTEGER GENERATED BY DEFAULT AS IDENTITY (START WITH 1) PRIMARY KEY,
                        name             VARCHAR(120)        NOT NULL,
                        email            VARCHAR(160)        NOT NULL UNIQUE,
                        membership_date  DATE                NOT NULL
);

-- book
CREATE TABLE book (
                      id              INTEGER GENERATED BY DEFAULT AS IDENTITY (START WITH 1) PRIMARY KEY,
                      title           VARCHAR(200)        NOT NULL,
                      author          VARCHAR(160)        NOT NULL,
                      isbn            VARCHAR(20)         NOT NULL UNIQUE,
                      published_year  INTEGER,
                      CONSTRAINT chk_book_year CHECK (published_year IS NULL OR (published_year BETWEEN 1400 AND 2100))
);

-- loan
CREATE TABLE loan (
                      id           INTEGER GENERATED BY DEFAULT AS IDENTITY (START WITH 1) PRIMARY KEY,
                      book_id      INTEGER NOT NULL,
                      member_id    INTEGER NOT NULL,
                      loan_date    DATE    NOT NULL,
                      return_date  DATE,
                      CONSTRAINT fk_loan_book   FOREIGN KEY (book_id)   REFERENCES book(id)   ON DELETE RESTRICT,
                      CONSTRAINT fk_loan_member FOREIGN KEY (member_id) REFERENCES member(id) ON DELETE RESTRICT,
                      CONSTRAINT chk_dates CHECK (return_date IS NULL OR return_date >= loan_date)
);

-- Helpful indexes
CREATE INDEX idx_loan_book   ON loan(book_id);
CREATE INDEX idx_loan_member ON loan(member_id);
CREATE INDEX idx_book_title  ON book(title);
CREATE INDEX idx_member_name ON member(name);
